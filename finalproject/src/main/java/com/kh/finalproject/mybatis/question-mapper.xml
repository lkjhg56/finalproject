<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
 <mapper namespace="question">
 	<!-- 유저 문제 시퀀스 뽑기 --> 
 	<select id="sequence" resultType="int">
 		select question_seq.nextval from dual
 	</select>
 	 <select id="userSequence" resultType="int">
 		select user_custom_question_seq.nextval from dual
 	</select>
 	 	 <select id="questionSequence" resultType="int">
 		select question_result_seq.nextval from dual
 	</select>
 	
 	<!-- 일반문제 시퀀스 뽑기 -->
 	<select id="testquestionSequence" resultType="int">
 	select test_question_seq.nextval from dual
 	</select>
 	
 	<select id="categorySequence" resultType="int">
 	select category_seq.nextval from dual
 	</select>
 	
 	<select id="testSequence" resultType="int">
 	select test_seq.nextval from dual
 	</select>
 	<select id="categoryE" resultType="int" parameterType="normalUpdateQuestionVO">
 	select count(*) from test T inner join category C on t.tno=c.test_no where c.csname=#{csname} and t.test_category=#{test_category}
 	</select>
 	
 	<!-- 카테고리 유무 -->
 	<select id="testE" resultType="int" parameterType="normalUpdateQuestionVO">
 	 select count(*) from test where test_category=#{test_category}
 	</select>
 	
 	
 		<select id="testtno" resultType="int" parameterType="normalUpdateQuestionVO">
 	 select tno from test where test_category=#{test_category}
 	</select>
 	
 	
 	<!-- 문제테이블과 이미지 테이블을 합쳐서 출력 -->
	<resultMap type="uploadQuestionDto" id="imageList">
		<result column="question_no" property="question_no"/>
		<result column="question_title" property="question_title"/>
		<result column="question_content" property="question_content"/>
		<result column="answer1" property="answer1"/>
		<result column="answer2" property="answer2"/>
		<result column="answer3" property="answer3"/>
		<result column="answer4" property="answer4"/>
		<result column="answer5" property="answer5"/>
		<result column="correct_ratio" property="correct_ratio"/>
			<collection column="question_no"
				property="files"
				javaType="java.util.List"
				ofType="uploadQuestionFileDto"
				select="getFile">
			</collection>
	</resultMap>
	<select id="getListWithImage" resultMap="imageList" >
 	 	select * from question where question_premium=0 order by question_no asc
 	</select>
 	<!-- 문제테이블과 이미지 테이블을 합쳐서 출력 by question_no-->
	<resultMap type="uploadQuestionDto" id="imageListWithQuestion">
		<result column="question_no" property="question_no"/>
		<result column="question_title" property="question_title"/>
		<result column="question_content" property="question_content"/>
		<result column="question_solution" property="question_solution"/>
		<result column="question_answer" property="question_answer"/>
		<result column="answer1" property="answer1"/>
		<result column="answer2" property="answer2"/>
		<result column="answer3" property="answer3"/>
		<result column="answer4" property="answer4"/>
		<result column="answer5" property="answer5"/>
		<result column="correct_ratio" property="correct_ratio"/>
			<collection column="question_no"
				property="files"
				javaType="java.util.List"
				ofType="uploadQuestionFileDto"
				select="getFile">
			</collection>
	</resultMap>
	<select id="getListWithImageByNumber" parameterType="int" resultMap="imageListWithQuestion" >
 	 	select * from question where question_no=#{question_no} order by question_no asc
 	</select>
 	<!-- 전체 문제 개수 -->
 	<select id="questionCount" resultType="int">
 		select count(*) from question
 	</select>
 	<select id="questionCountId" parameterType="String" resultType="int">
 	 	select count(*) from 
			question q
			inner join 
    		(select * from users u
         		left outer join user_custom_question ucq
        		on u.user_no = ucq.user_no
        	)e
		on q.user_custom_question_no = e.user_custom_question_no
		where id=#{id} order by question_no desc
	</select>
 	<!-- 네비게이터 -->	
 	<select id="questionNavRownum" parameterType="map" resultType="uploadQuestionDto">
 		select * from(select rownum rn, A.* from(
 			select * from(
 				select * from question q inner join user_custom_question ucq on q.user_custom_question_no=ucq.user_custom_question_no order by question_no desc
 				)T inner join users U on T.user_no = U.user_no 
 			)A
 		)where rn between #{start} and #{finish}
	</select>
 	<select id="questionNavRownumId" parameterType="map" resultType="uploadQuestionDto">
		 select * from(
		    select rownum rn, A.* from(
		        select 
		            U.user_no, 
		            T.question_no, 
		            T.user_custom_question_no,
		            T.question_title,
		            T.question_content,
		            T.question_answer,
		            T.question_solution,
		            T.question_premium,
		            T.answer1,
		            T.answer2,
		            T.answer3,
		            T.answer4,
		            T.answer5,
		            T.correct_ratio,
		            T.read_count,
		            T.category_name
		        from(
		            select
		                q.question_no,
		                q.user_custom_question_no,
		                q.question_title,
		                q.question_content,
		                q.question_answer,
		                q.question_solution,
		                q.question_premium,
		                q.answer1,
		                q.answer2,
		                q.answer3,
		                q.answer4,
		                q.answer5,
		                q.correct_ratio,
		                q.read_count,
		                ucq.user_no,
		                ucq.category_name
		            from question q inner join user_custom_question ucq on q.user_custom_question_no=ucq.user_custom_question_no order by question_no desc
		        )T inner join users U on T.user_no = U.user_no
		    )A
		) where user_no=#{user_no} and rn between #{start} and #{finish}
	</select>
	<select id="searchQuestion" parameterType="map" resultType="uploadQuestionDto">
 	  	select * from(
 	  		select rownum rn, A.* from(
		 	 	select * from 
					question q
					left outer join (
						select * from users u
		         		left outer join user_custom_question ucq
		        		on u.user_no = ucq.user_no
		        	)e
				on q.user_custom_question_no = e.user_custom_question_no
			)A
 		)where ${option} like '%'||#{keyword}||'%' and rn between #{start} and #{finish} order by rn desc
	</select>
	<select id="searchQuestionCount" parameterType="map" resultType="int">
 	  	select count(*) from(
 	  		select rownum rn, A.* from(
		 	 	select * from 
					question q
					left outer join (
						select * from users u
		         		left outer join user_custom_question ucq
		        		on u.user_no = ucq.user_no
		        	)e
				on q.user_custom_question_no = e.user_custom_question_no
			)A
 		)where ${option} like '%'||#{keyword}||'%' and rn between #{start} and #{finish} order by rn desc
	</select>
	<select id="getUserNo" parameterType="int" resultType="int">
		select user_no from user_custom_question where user_custom_question_no=#{user_custom_question_no}
	</select>
 	<!-- 유저 문제 업로드 -->
 	<insert id="upload" parameterType="uploadQuestionDto">
 		insert into question values(
 			#{question_no},
 			#{user_custom_question_no},
 			#{question_title},
 			#{question_content},
 			#{question_answer},
 			#{question_solution},
 			#{question_premium},
 			#{answer1},
 			#{answer2},
 			#{answer3},
 			#{answer4},
 			#{answer5},
 			0,
 			0
 			)
 	</insert>
 	
 	<insert id="upload_sub" parameterType="uploadQuestionDto">
 		insert into user_custom_question values(
 			#{user_custom_question_no},
 			#{user_no},
 			#{category_name}
 		)
 	</insert>
 	<insert id="upload_file" parameterType="uploadQuestionFileDto">
 		insert into question_file values(
 		question_file_seq.nextval,
		#{file_upload_name},
		#{file_save_name},
		#{file_type},
		#{file_size},
		#{question_no}
 		)
 	</insert> 	
 	<!-- 단일 사용자 문제 해결 결과 저장 -->
 	<insert id="insert_result" parameterType="userQuestionResultDto">
 		insert into question_result values(
 			#{result_no},
			#{result},
 			#{result_time},
			sysdate,
			#{user_conclusion},
			#{tried_user},
			#{question_no}
 		)
 	</insert>
 	
 	<!-- 다중 사용자 문제 해결 결과 저장 -->
 	<insert id="insert_multi_result" parameterType="userQuestionMultiResultDto">
 		insert into question_multi_result values(
 			question_multi_result_seq.nextval,
			#{user_no},
			#{total_question},
			#{correct_count},
			#{incorrect_count},
			#{sum_score},
			#{result_time},
			sysdate
 		)
 	</insert>
 	
 	<!-- test_question 업로드 -->
 	<insert id="uploadtestquestion" parameterType="testQuestionDto">
 		insert into test_question values(
 			#{no},
 			#{csname},
 			#{category_no},
 			#{question},
 			#{ispremium},
 			#{answer},
 			#{correct},
 			#{incorrect},
 				#{dis1},
 			#{dis2},
 			#{dis3},
 			#{dis4},
 			#{dis5},
 			#{rate},
 			#{lim_min}
 			)
 	</insert>
 	
 	<!-- 일반문제 목록 -->
 	<select id="getNormal"  parameterType="normalUpdateQuestionVO" resultType="testQuestionDto">
 	   select * from test_question where category_no=#{category_no} and csname=#{csname} order by no asc
 	</select>
 	
 	<select id="getNormal2"  resultType="testQuestionDto">
 	   select * from test_question order by no asc
 	</select>
 	
 	 	<select id="getNormal3"  parameterType="testQuestionDto" resultType="testQuestionDto">
 	   select * from test_question where category_no=#{category_no} and csname=#{csname} order by no asc
 	</select>
 	
 	<!--  문제별 개수-->
 	<select id="getCountNormal" parameterType="testQuestionDto" resultType="int">
 	 select count(*) from test_question where category_no=#{category_no} and csname=#{csname} order by no asc
 	</select>
 	
 	
 	<!-- 일반 문제 상세보기 -->
 	<select id="getContent" resultType="testQuestionDto" parameterType="int">
 	select * from test_question where no=#{no}
 	</select>
 	
 	<select id="getContent2" parameterType="int" resultType="normalUpdateQuestionVO">
	     select T.*,S.solution_no,s.solution 
			from test_question T inner join solution S
			on t.no=S.question_no where t.no=#{no}
 	</select>
 	
 	
 	
 		<select id="getResultSolution" parameterType="int" resultType="normalUpdateQuestionVO">
	     select T.question,t.dis1,t.dis2,t.dis3,t.dis4,t.dis5,S.solution_no,s.solution,r.iscorrect,r.correct,t.no
			from test_question T inner join solution S
			on t.no=S.question_no 
			inner join rcorrect R
			on t.no=r.test_no
			where r.result_no=#{rno}
			order by no asc 
 	</select>
 	
 	
 	
 	<!-- 정답률 계산 -->
 	<!-- 문제 등록 후 최초 오답이 날 경우 분자가 0이 되어  DB에서 에러가 발생함. -->
 	<!-- 하기 case when을 이용하여 예외처리를 해줌. -->
	<select id="correctRatio" parameterType="int" resultType="int">
		select 
           	  case when B=0 then 0
                   when B>0 then B / A * 100
	          end ccmt
		from (select 
			(select count(result) from question_result where question_no=#{question_no})A,
			(select count(result) from question_result where question_no=#{question_no} and result=1)B
		from dual)
	</select> 	
	<update id="updateRatio" parameterType="uploadQuestionDto">
		update question set 
			correct_ratio=#{correct_ratio} 
		where question_no=#{question_no}
	</update>
	<!-- 조회수 증가 -->
	<update id="upReadCount" parameterType="int">
		update question set read_count = read_count +1 where question_no=#{question_no}
	</update>
 	<!-- 유저 문제 수정 -->
 	<update id="updateQuestion" parameterType="uploadQuestionDto">
 		update question set 
 			question_title=#{question_title},
 			question_content=#{question_content},
 			question_answer=#{question_answer},
 			answer1=#{answer1},
 			answer2=#{answer2},
 			answer3=#{answer3},
 			answer4=#{answer4},
 			answer5=#{answer5},
 			question_solution=#{question_solution},
 			question_premium=#{question_premium} 
 		where question_no=#{question_no}			
 	</update>
 	<update id="updateFile" parameterType="uploadQuestionFileDto">
 		update question_file set 
			file_upload_name=#{file_upload_name},
			file_save_name=#{file_save_name},
			file_type=#{file_type},
			file_size=#{file_size}
 		where question_no=#{question_no}			
 	</update>
 	
 	
 	<update id="updateTestFile" parameterType="uploadTestQuestionFileDto">
 	
 	   
        	update test_question_file set 
			file_upload_name=#{file_upload_name},
			file_save_name=#{file_save_name},
			file_type=#{file_type},
			file_size=#{file_size}
 		where test_question_no=#{test_question_no}	
 	</update>
 	<update id="updateCustom" parameterType="uploadQuestionDto">
 		update user_custom_question set 
			category_name=#{category_name}
 		where user_custom_question_no=#{user_custom_question_no}			
 	</update>
 	
 	 <!-- 사용자 문제 해결 후 결과값 호출 -->
 	 <select id="userResultTrue" parameterType="int" resultType="int">
 	 	select count(result) from question_result where  question_no=#{question_no} and result=1
 	 </select>
 	 <select id="userResultFalse" parameterType="int" resultType="int">
 	 	select count(result) from question_result where question_no=#{question_no} and result=0
 	 </select>
 	 <select id="userPriority" parameterType="userQuestionResultDto" resultType="userQuestionResultDto">
		select rownum,e.* from(
			select * from question_result where question_no=#{question_no} and result_no=#{result_no})e	
	 </select>
	 
	  	<!-- 유저 문제 조회 --> 	
 	 <select id="getList" resultType="uploadQuestionDto" >
 	 	select * from question order by question_no asc
 	 </select>
 	 <select id="getOne" resultType="uploadQuestionDto">
 		 select * from question where question_no=#{question_no}
 	 </select> 	  	 
 	 <!-- 세션 id를 이용하여 user_no를 가져옴 -->
 	 <select id="getNo" parameterType="String" resultType="int">
 	 	select user_no from users where id=#{id}
 	 </select> 	 
 	 <!-- user + user_custom_question + question 테이블 조인 -->
 	 <select id="getTotal" parameterType="int" resultType="uploadQuestionDto">
 	 	select * from 
			question q
			left outer join 
    		(select * from users u
         		left outer join user_custom_question ucq
        		on u.user_no = ucq.user_no
        	)e
		on q.user_custom_question_no = e.user_custom_question_no
		where question_no=#{question_no}
 	 </select>
 	 <select id="getTotal2" resultType="uploadQuestionDto">
 	 	select * from 
			question q
			left outer join 
    		(select * from users u
         		left outer join user_custom_question ucq
        		on u.user_no = ucq.user_no
        	)e
		on q.user_custom_question_no = e.user_custom_question_no
		order by question_no desc
 	 </select>
 	 <select id="getListById" parameterType="String" resultType="uploadQuestionDto">
 	 	select * from 
			question q
			inner join 
    		(select * from users u
         		left outer join user_custom_question ucq
        		on u.user_no = ucq.user_no
        	)e
		on q.user_custom_question_no = e.user_custom_question_no
		where id=#{id} order by question_no desc
 	 </select>

 	 <!-- 파일 불러오기 -->
 	 <select id="getFile" parameterType="int" resultType="uploadQuestionFileDto">
 	 	select * from question_file where question_no=#{question_no}
 	 </select>
 	 <select id="getFile2" parameterType="int" resultType="uploadQuestionFileDto">
 	 	select * from question_file where question_file_no=#{question_file_no}
 	 </select>
 	 <!-- 일반문제 파일 불러오기 -->
 	 
 	 <select id="getNormalFile" parameterType="int" resultType="uploadTestQuestionFileDto">
		select * from test_question_file where test_question_no=#{no}
 	 </select>


<!-- csname으로 test_question 수 조회 -->
<select id="csTestquestion" parameterType="String" resultType="int">

  select count(*) from test_question where csname =#{csname}
</select>


<!-- testquestion 삭제 -->

<delete id="deleteTestQuestion" parameterType="int">

delete from test_question where no=#{no}
</delete>


<!--  -->




<select id="countCategory" parameterType="String" resultType="int">

   select count(*) from category where csname=#{csname}
</select>

<select id="selectCategoryDto" parameterType="String" resultType="categoryDto">
 select * from category where csname=#{csname}

</select>
 	 <!-- 일반문제 수정 -->
 	  	<update id="updateTestQuestion" parameterType="normalUpdateQuestionVO">
 		update test_question set 
 			
 		
 			question=#{question},
 		
 			answer=#{answer},
 		
 			dis1=#{dis1},
 			dis2=#{dis2},
 			dis3=#{dis3},
 			dis4=#{dis4},
 			dis5=#{dis5}
 	
 		where no=#{no}
 	</update>
<!-- solution -->
<update id="updateSolution" parameterType="normalUpdateQuestionVO">

update solution set 
 			
 		
 		
 		
 			solution=#{solution}
 		
 		
 	
 		where question_no=#{no}
</update>
 	 
 	 <!-- 
 	 문제 삭제
 	 1. Question 삭제
 	 2. Question_file 삭제
 	 3. 실제 이미지파일 삭제
 	 -->

 	 <!-- 문제 삭제 -->

 	 <delete id="deleteQuestion">
 	 	delete from question where question_no=#{question_no}
 	 </delete>
 	 <delete id="deleteUser">
 	 	delete from user_custom_question where user_custom_question_no=#{user_custom_question_no}
 	 </delete>
 	 <delete id="deleteFile">
 	 	delete from question_file where question_file_no=#{question_file_no}
 	 </delete>
 	 <delete id="deleteResult">
 	 	delete from question_result where question_no=#{question_no}
 	 </delete>
 	 
 	 <!-- csname으로 category 삭제 -->
 	 <delete id="deleteCategory" parameterType="String">
 	 
 	  delete from category where csname =#{csname}
 	 </delete>
 	 
 	 
 	 <!-- test_no로 test 삭제 -->
 	 <delete id="deleteTest" parameterType="int" >
 	   delete from test where tno =#{tno}
 	 
 	 </delete>
 	 
 	 
 	<!-- 업로드 --> 	 		
 	<insert id="uploadcategory" parameterType="categoryDto">
	 	insert into category values(
		 	#{category_no},
		 	#{csname},
		 	#{test_no},
		 	 	#{lim_hour},
		 	#{lim_min}
	 	
	 	)
 	</insert>
 	
 	<insert id="uploadtest" parameterType="testDto">
 		insert into test values(
 			#{tno},
 			#{test_category}
 		)
 	</insert>
 	
 	<insert id="normalupload_file" parameterType="uploadTestQuestionFileDto">
 			insert into test_question_file values(
 		test_question_file_seq.nextval,
		#{file_upload_name},
		#{file_save_name},
		#{file_type},
		#{file_size},
		#{test_question_no}
 		)
 	</insert> 
 	
 	
 	<delete id="deleteTestQFile" parameterType="int" >
 	delete from test_question_file where test_question_no=#{no}
 	</delete>
 	
 		
 	<insert id="uploadsolution" parameterType="solutionDto">
 	insert into solution values(
 	solution_seq.nextval,
 	#{solution},
 	#{question_no},
 	#{user_no}
 	)	
 	</insert>
 	
 	
 	
 	<!-- 일반 문제 전체 문제 개수 -->
 	<select id="testquestionCount" resultType="int">
 		select count(*) from test_question
 	
 	</select>
 	
 	<!-- 일반문제 네비게이터 -->
 	<select id="testquestionNavRownum" parameterType="map" resultType="testQuestionDto">
 		select * from(select rownum rn, A.* from(select * from test_question order by no desc)A)where rn between #{start} and #{finish}
	</select>
	
	
	
	
		<!-- 게시글 검색 구문 -->
	<select id="search" parameterType="hashmap" resultType="testQuestionDto">		

select * from(select rownum rn, A.* from(select * from test_question where category_no=#{category_no} and csname=#{csname} order by no asc )A)where rn between #{start} and #{finish}

	</select>
	
	
 </mapper>
