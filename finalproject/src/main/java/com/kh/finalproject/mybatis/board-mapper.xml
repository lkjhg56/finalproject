<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<!-- 
	namespace : 영역을 부르는 별칭
	parameterType : 이 명령을 실행하기 위해 필요한 데이터의 형태
	resultType : 기대되는 결과물의 형태(목록이든 아니든 dto 형태로 표기)
	
	태그때문에 못쓰게 되는 기호들은 다음의 영역으로 해결이 가능
	
		<![CDATA[
			SQL 구문
		]]>
		
	형태에 따라 파라미터를 다르게 설정할 수 있다
	- #은 형태를 추론하여 자동으로 따옴표 설정 및 인코딩 처리를 수행
	- $은 값을 있는 그대로 출력하는 명령이므로 주로 "항목"에 사용
		- $는 SQL Injection 이라는 해킹공격에 매우 취약하므로 사용에 주의
 -->

 <mapper namespace="board">
 	
	<!-- 게시글 등록 구문	-->
 	<insert id="regist" parameterType="boardDto">
 		insert into board values(
 			#{board_no},
 			#{board_category},
 			#{board_title},
 			0,
 			sysdate,
 			#{board_content},
 			#{board_writer},
 			0
 		)
 	</insert>
 	
 	<!-- 파일 저장구문 -->
	 <insert id="fileUpload" parameterType="list">
	 	insert into board_file values(
	 	board_file_seq.nextval,
	 	#{board_origin_content_no},
	 	#{board_file_upload_name},
	 	#{board_file_save_name},
	 	#{board_file_type},
	 	#{board_file_size}
	 	)
	 </insert>
	 
	 
	 <update id="edit" parameterType="boardDto">
	 	update board set
 			board_category = #{board_category},
 			board_title = #{board_title},
 			board_content = #{board_content}
 		where
 			board_no = #{board_no}
	 </update>
 	 
 	<!-- 게시글 삭제 구문 -->
 	<delete id="delete" parameterType="int">
 		delete board where board_no = #{board_no}
 	</delete>
 	
 	<!-- 게시글 첨부 파일 삭제 -->
 	<delete id="deletefile" parameterType="int">
 		delete from board_file where board_origin_content_no = #{board_no}
 	</delete>
 	
 	<!-- 게시글 전체 조회 구문	-->
 	<select id="list" parameterType="map" resultType="boardDto">
 		select * from(select rownum rn, A.* from(select * from board order by board_no desc)A)where rn between #{start} and #{finish}
	</select>
 	
 	<!-- 게시글 단일(상세) 조회 구문 -->
 	<select id="get" parameterType="int" resultType="boardDto">
		select * from board where board_no = #{board_no}
	</select>
	
	<!-- 게시판 카테고리별 조회 구문 -->
 	<select id="getCategoryList" parameterType="map" resultType="boardDto">
 		select * from(
 			select rownum rn, A.* from(select * from board 
 				where board_category = #{board_category} order by board_no desc
 			)A)
 		where rn between #{start} and #{finish}
	</select>
	
	<!-- 게시글 검색 구문 -->
	<select id="search" parameterType="hashmap" resultType="boardDto">		
	select * from(
		select rownum rn, A.* from(select * from board 
			where ${type} like '%'||#{keyword}||'%' order by board_no desc
		)A)
	where rn between #{start} and #{finish}
	</select>
	
	<!-- 게시판 시퀀스 자동발급 구문 -->
	<select id="getSequence" resultType="int">
		select board_seq.nextval from dual
	</select>
	
	<!-- 게시판파일 시퀀스 자동발급 구문 -->
	<select id="filegetSequence" resultType="int">
		select board_file_seq.nextval from dual
	</select>
	
	<!-- 게시판 전체 글 개수 세는 구문 -->
	<select id="boardCount" resultType="int">
		select count(*) from board
	</select>
	
	<!-- 게시판 카테고리별 글 개수 세는 구문 -->
	<select id="boardCategoryCount" parameterType="String" resultType="int">
		select count(*) from board where board_category = #{board_category}
	</select>
	
	<!-- 게시판 검색 결과 글 개수 세는 구문 -->
	<select id="boardSearchCount" parameterType="map" resultType="int">
		select count(*) from board where ${type} like '%'||#{keyword}||'%' 
	</select>
	
	<!-- 게시글 파일 불러오기 -->
 	 <select id="getFileOne" parameterType="int" resultType="boardfileDto">
 	 	select * from board_file where board_file_no=#{board_file_no}
 	 </select>
 	 
 	 <!-- 파일 수정을 위한 게시글 파일 번호 가져오기 --> 	 
 	 <!-- 게시글 파일 번호 가져오기 -->
 	 <select id="getFileNO" parameterType="int" resultType="boardfileDto">
 	 	select * from board_file where board_origin_content_no = #{board_no}
 	 </select>
 	 
 	 <!-- 조회수 증가 -->
	<update id="readCount" parameterType="int">
		update board set board_readcount = board_readcount +1 where board_no=#{board_no}
	</update>
	
	<!-- 신고 등록 구문(글신고) -->
	<insert id="insertReport" parameterType="boardReportDto">
		insert into report(
				report_no, 
				report_board_no, 
				report_board_writer, 	
				report_reply_no,		
				reporter,
				report_content,
				report_count,
				report_reason
				)
		 values(
			 	report_seq.nextval,
				#{report_board_no},
				#{report_board_writer},
				null,
				#{reporter},	
				#{report_content},
				#{report_count},
				#{report_reason}	
		)
	</insert>	
	
	<!-- 신고 등록 구문2(댓글신고) -->
	<insert id="insertReport2" parameterType="boardReportDto">
		insert into report(
				report_no, 
				report_board_no, 
				report_board_writer, 
				report_reply_no,
				reporter,
				report_content,
				report_count,
				report_reason
				)
		 values(
			 	report_seq.nextval,
			 	null,
				#{report_board_writer},
				#{report_reply_no},
				#{reporter},	
				#{report_content},
				#{report_count},
				#{report_reason}	
		)
	</insert>	
	
	<!-- 신고게시글 목록 조회 -->
	<select id="reportList" resultType="boardReportDto">
		select * from( 
		    select rownum rn, A.* from(select * from
			    report R
			        inner join board B
			            on R.report_board_no = B.board_no
			   order by report_no desc
			 )A)
		where rn between #{start} and #{finish}
	</select>
	
<!-- 	신고게시글 목록 검색 -->
	<select id="reportSearch" resultType="boardReportDto">
		select * from( 
		    select rownum rn, A.* from(select * from
			    report R
			        inner join board B
			            on R.report_board_no = B.board_no
			   where ${type} like '%'||#{keyword}||'%' order by report_no desc
			 )A)
		where rn between #{start} and #{finish}
	</select>
	
	<!-- 신고게시글 카테고리별 목록 조회 -->
	<select id="reportCategoryList" parameterType="map" resultType="boardReportDto">
		select * from( 
		    select rownum rn, A.* from(select * from
		        report R
		            inner join board B
		                on R.report_board_no = B.board_no
		    where board_category = #{board_category} order by report_no desc
		    )A)
		where rn between #{start} and #{finish}
	</select>
	
	<!-- 신고게시글 카테고리별 목록 검색 -->
	<select id="reportCategorySearch" parameterType="map" resultType="boardReportDto">
		select * from( 
		    select rownum rn, A.* from(select * from
		        report R
		            inner join board B
		                on R.report_board_no = B.board_no
		    where board_category = #{board_category} and ${type} like '%'||#{keyword}||'%' order by report_no desc
		    )A)
		where rn between #{start} and #{finish}
	</select>
	
	
	<!-- 	게시글 신고관리 게시글 갯수 조회 -->
	<select id="boardReportCount" resultType="int">
		select count(*) from 
			report R
		        inner join board B
		            on R.report_board_no = B.board_no
	</select>
	
	
	<!-- 	게시글 신고관리 게시글 카테고리별 갯수 조회  -->
	<select id="ReportCategoryCount" resultType="int">
		select count(*) from 
		    report R
		        inner join board B
		            on R.report_board_no = B.board_no
		where board_category = #{board_category}
	</select>
	
	 <!-- 누적신고횟수 조회 -->
	<select id="reportCountAdd" parameterType="int" resultType="int">
		select count(*) from report where report_board_no = #{board_no}
	</select>
	
	<!-- 메인에서 최신글 7개 보여주기 -->
	<select id="recent_content" resultType="boardDto">
		select * from(
 			select rownum rn, A.* from(select * from board 
 				order by board_wdate desc
 			)A)
 		where rn between 1 and 6
	</select>
	
	<!-- /////////////////////////////////////////////
								댓글 sql구문 시작
	 //////////////////////////////////////////////-->
	
	<!-- 댓글수 증가 구문 -->
	<update id="calculate">
		update 
			board 
		set board_replycount = (
			select count (*) from board_reply 
		where 
			board_reply_origin = #{board_reply_origin} 
			 )
		where 
			board_no = #{board_reply_origin}
	</update>
	
	<!-- 댓글 등록 구문 -->
	<insert id="registReply" parameterType="boardReplyDto">
		insert into board_reply(
				board_reply_no, 
				board_reply_content, 
				board_reply_writer, 
				board_reply_origin,
				groupno
				)
		 values(
			 	#{board_reply_no},
				#{board_reply_content},
				#{board_reply_writer},
				#{board_reply_origin},
				#{groupno}	
		)
	</insert>
	
	<!-- 대댓글 등록 구문 -->
	<insert id="registRereply" parameterType="boardReplyDto">
		insert into board_reply(
				board_reply_no, 
				board_reply_content, 
				board_reply_writer, 
				board_reply_origin,
				groupno,
				superno,
				depth
			)
		 values(
			 	#{board_reply_no},
				#{board_reply_content},
				#{board_reply_writer},
				#{board_reply_origin},
				#{groupno},
				#{superno},
				#{depth}
			)
	</insert>
	
	<!-- 댓글 삭제 구문 -->
	<delete id="deleteReply" parameterType="int">
		delete board_reply where board_reply_no = #{board_reply_no}
	</delete>
	
	<!-- 댓글 시퀀스 자동발급 구문 -->
	<select id="getReplySequence" resultType="int">
		select reply_seq.nextval from dual
	</select>
	
	<!-- 댓글 조회 구문 -->
	<select id="ReplyList" parameterType="map" resultType="boardReplyDto">
	select * from(
 		select rownum rn, A.* from(
 			select * from board_reply where board_reply_origin = #{board_no}
 			connect by prior board_reply_no = superno
 			 start with superno is null
 			 order siblings by groupno asc, board_reply_no asc
		)A)
 	where rn between #{start} and #{finish}
	</select>
<!--  			where board_reply_origin = #{board_no} order by board_reply_no asc -->
	
	<!-- 댓글 한개 조회 구문 -->
	<select id="getOneReply"  parameterType="int" resultType="boardReplyDto">
		select * from board_reply where board_reply_no = #{board_reply_no}
	</select>
	
	<!-- 댓글 수정 구문 -->
	<update id="editReply" parameterType="boardReplyDto">
		update board_reply set 
	 	 	board_reply_content = #{board_reply_content} 
 	 	where 
 	 		board_reply_no = #{board_reply_no}
	</update>	
	
	<!-- 게시글에 달린 댓글 개수 세는 구문 -->
	<select id="boardReplyCount" resultType="int">
		select count(*) from board_reply where board_reply_origin = #{board_no}
	</select>
	
	<!-- 신고댓글 목록 조회 -->
	<select id="reportRPList" resultType="boardReportDto">
		select * from( 
		    select rownum rn, A.* from(select * from
			    report R
			        inner join board_reply B
			             on R.report_reply_no = B.board_reply_no
	              order by report_no desc
			 )A)
		where rn between #{start} and #{finish}
	</select>
	
	<!-- 	게시판 신고관리 댓글 갯수 조회 -->
	<select id="replyReportCount" resultType="int">
		select count(*) from 
			report R
		        inner join board_reply B
			             on R.report_reply_no = B.board_reply_no
	</select>
	
	 <!-- 누적신고횟수 조회 -->
	<select id="reportCountAdd2" parameterType="int" resultType="int">
		select count(*) from report where report_reply_no = #{report_reply_no}
	</select>
	
	<!-- 	신고댓글 목록 검색 -->
	<select id="reportRPSearch"  parameterType="map" resultType="boardReportDto">
		select * from( 
		    select rownum rn, A.* from(select * from
			    report R
			        inner join board_reply B
			             on R.report_reply_no = B.board_reply_no
			   where ${type} like '%'||#{keyword}||'%' order by report_no desc
			 )A)
		where rn between #{start} and #{finish}
	</select>
		
 </mapper>